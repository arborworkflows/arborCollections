{
    "description": "",
    "inputs": [
        {
            "default": {
                "data": "NULL",
                "format": "text",
                "type": "string"
            },
            "description": "A prior created by a makeBissePrior",
            "format": "object",
            "name": "diversitreePrior",
            "type": "r"
        },
        {
            "description": "A diversitree likelihood object",
            "format": "object",
            "name": "diversitreeLikelihood",
            "type": "r"
        }
    ],
    "mode": "r",
    "name": "bisseBayes",
    "outputs": [
        {
            "description": "MCMC output table",
            "format": "r.dataframe",
            "name": "samples",
            "type": "table"
        }
    ],
    "script": "require(diversitree)\n# inputs: like = likelihood function, con = constraints\n# outputs: fit = ml fit\n\n#if(!is.null(con))\n#\tlik<-constrain(lik, con)\n#\t\t\t\t\n#set.seed(1) # this is not general\n\n#prior <- make.prior.exponential(.5) # NOT GENERAL - we need arguments for this\n#pars<-exp(prior(1))\n#samples <- mcmc(lik, pars, 1000, w=1, prior=prior, print.every=10) # likewise, need control arguments here\n#aceSamp <- apply(samples[c(-1, -dim(samples)[2])], 1, asr.joint, lik=lik)\n#zz<-apply(aceSamp, 2, table)/1000\n#attributes(zz)$fit <- fit\n#return(t(zz))\nlik <- diversitreeLikelihood\nprior <- diversitreePrior\nif(is.null(prior)){\n  priorFn <- make.prior.exponential(.5) # NOT GENERAL - we need arguments for this\n  pars<-exp(prior(1))\n} else {\n  .prior <- prior$prior[argnames(lik)]\n  priorFn <- function(pars){\n    sum(sapply(1:length(.prior), function(x) .prior[[x]](pars[x])))\n  }\n  pars <- sapply(1:length(.prior), function(x) prior$simulator[[x]](1))\n}\n\nsamples <- mcmc(lik, pars, 1000, w=1, prior=priorFn, print.every=10) # likewise, need control arguments here\n"
}