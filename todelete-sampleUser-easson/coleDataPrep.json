{
    "connections": [
        {
            "input": "input",
            "input_step": "decostand",
            "name": "input"
        },
        {
            "input": "table",
            "input_step": "make.treedata",
            "name": "table"
        },
        {
            "input": "type",
            "input_step": "make.treedata",
            "name": "type 1"
        },
        {
            "input": "tree",
            "input_step": "make.treedata",
            "name": "tree"
        },
        {
            "input": "staticTable",
            "input_step": "matchTables 1",
            "output": "dat",
            "output_step": "make.treedata"
        },
        {
            "input": "reorderedTable",
            "input_step": "matchTables 1",
            "output": "output",
            "output_step": "decostand"
        },
        {
            "name": "dat",
            "output": "dat",
            "output_step": "make.treedata"
        },
        {
            "input": "tree",
            "input_step": "rescalePhylo 1",
            "output": "phy",
            "output_step": "make.treedata"
        },
        {
            "input": "model",
            "input_step": "rescalePhylo 1",
            "name": "model 1"
        },
        {
            "input": "parameter",
            "input_step": "rescalePhylo 1",
            "name": "parameter 1"
        },
        {
            "input": "phy",
            "input_step": "Cophenetic Distance Matrix from Tree 2",
            "output": "rscTree",
            "output_step": "rescalePhylo 1"
        },
        {
            "name": "distance.matrix",
            "output": "distance.matrix",
            "output_step": "Cophenetic Distance Matrix from Tree 2"
        },
        {
            "input": "phy",
            "input_step": "Cophenetic Distance Matrix from Tree 1",
            "output": "phy",
            "output_step": "make.treedata"
        },
        {
            "name": "distance.matrix 1",
            "output": "distance.matrix",
            "output_step": "Cophenetic Distance Matrix from Tree 1"
        },
        {
            "name": "distance.matrix 2",
            "output": "distance.matrix",
            "output_step": "Cophenetic Distance Matrix from Tree"
        },
        {
            "input": "table",
            "input_step": "matchPhyloComm 1",
            "output": "newTable",
            "output_step": "matchTables 1"
        },
        {
            "input": "tree",
            "input_step": "matchPhyloComm 1",
            "name": "tree 1"
        },
        {
            "name": "comTable",
            "output": "comTable",
            "output_step": "matchPhyloComm 1"
        },
        {
            "input": "phy",
            "input_step": "Cophenetic Distance Matrix from Tree",
            "output": "comPhy",
            "output_step": "matchPhyloComm 1"
        },
        {
            "name": "comm.bc.dist",
            "output": "comm.bc.dist",
            "output_step": "Bray-Curtis Dissimilarity UAB 1"
        },
        {
            "input": "table",
            "input_step": "Bray-Curtis Dissimilarity UAB 1",
            "output": "comTable",
            "output_step": "matchPhyloComm 1"
        }
    ],
    "inputs": [
        {
            "format": "csv",
            "name": "input",
            "type": "table",
            "x": 9,
            "y": 12
        },
        {
            "format": "r.apetree",
            "name": "tree",
            "type": "tree",
            "x": 14,
            "y": 172
        },
        {
            "format": "r.dataframe",
            "name": "table",
            "type": "table",
            "x": 295,
            "y": 206
        },
        {
            "default": "both",
            "domain": [
                "both",
                "discrete",
                "continuous"
            ],
            "format": "text",
            "name": "type 1",
            "type": "string",
            "x": 9,
            "y": 496
        },
        {
            "default": "lambda",
            "domain": [
                "lambda",
                "BM",
                "OU",
                "EB",
                "nrate",
                "lrate",
                "trend",
                "kappa",
                "delta",
                "white",
                "depth"
            ],
            "format": "text",
            "name": "model 1",
            "type": "string",
            "x": 10,
            "y": 278
        },
        {
            "format": "number",
            "name": "parameter 1",
            "type": "number",
            "x": 10,
            "y": 388
        },
        {
            "format": "r.apetree",
            "name": "tree 1",
            "type": "tree",
            "x": 12,
            "y": 606
        }
    ],
    "mode": "workflow",
    "name": "coleDataPrep",
    "outputs": [
        {
            "format": "r.dataframe",
            "name": "dat",
            "type": "table",
            "x": 1497,
            "y": 150
        },
        {
            "description": "Output cophenetic distance matrix",
            "format": "r.dataframe",
            "name": "distance.matrix",
            "type": "table",
            "x": 1523,
            "y": 730
        },
        {
            "description": "Output cophenetic distance matrix",
            "format": "r.dataframe",
            "name": "distance.matrix 1",
            "type": "table",
            "x": 1517,
            "y": 580
        },
        {
            "description": "Output cophenetic distance matrix",
            "format": "r.dataframe",
            "name": "distance.matrix 2",
            "type": "table",
            "x": 1516,
            "y": 427
        },
        {
            "description": "Bray-Curtis dissimilarity matrix",
            "format": "r.dataframe",
            "name": "comm.bc.dist",
            "type": "table",
            "x": 1499,
            "y": 20
        },
        {
            "format": "r.dataframe",
            "name": "comTable",
            "type": "table",
            "x": 1511,
            "y": 286
        }
    ],
    "steps": [
        {
            "id": "decostand",
            "name": "decostand",
            "task": {
                "inputs": [
                    {
                        "format": "r.dataframe",
                        "name": "input",
                        "type": "table"
                    }
                ],
                "mode": "r",
                "name": "decostand",
                "outputs": [
                    {
                        "format": "r.dataframe",
                        "name": "output",
                        "type": "table"
                    }
                ],
                "script": "library(picante)\nrownames(input) <- input[,1]\noutput<- decostand(input[,-1], method=\"total\")",
                "x": 351,
                "y": 29
            },
            "x": 351,
            "y": 29
        },
        {
            "id": "make.treedata",
            "name": "make.treedata",
            "task": {
                "inputs": [
                    {
                        "format": "r.apetree",
                        "name": "tree",
                        "type": "tree"
                    },
                    {
                        "format": "r.dataframe",
                        "name": "table",
                        "type": "table"
                    },
                    {
                        "default": "both",
                        "domain": [
                            "both",
                            "discrete",
                            "continuous"
                        ],
                        "format": "text",
                        "name": "type",
                        "type": "string"
                    }
                ],
                "mode": "r",
                "name": "make.treedata",
                "outputs": [
                    {
                        "format": "r.dataframe",
                        "name": "columns",
                        "type": "table"
                    },
                    {
                        "format": "r.apetree",
                        "name": "phy",
                        "type": "tree"
                    },
                    {
                        "format": "r.dataframe",
                        "name": "dat",
                        "type": "table"
                    }
                ],
                "script": "library(aRbor)\n\nif(is.binary.tree(tree)==FALSE){\n  tree <- multi2di(tree)\n}\ntd <- make.treedata(tree, table)\nif(type!=\"both\"){\n    if(type==\"discrete\"){\n      td <- checkFactor(td)\n        }\n    if(type==\"continuous\"){\n      td <- checkNumeric(td)\n        }\n    }\n#### Return these columns \ncolumns <- colnames(td$dat)\nphy <- td$phy\ndat <- td$dat",
                "x": 538,
                "y": 169
            },
            "x": 538,
            "y": 169
        },
        {
            "id": "matchTables 1",
            "name": "matchTables 1",
            "task": {
                "inputs": [
                    {
                        "description": "The table to match the order to",
                        "format": "r.dataframe",
                        "name": "staticTable",
                        "type": "table"
                    },
                    {
                        "description": "The table to reorder",
                        "format": "r.dataframe",
                        "name": "reorderedTable",
                        "type": "table"
                    }
                ],
                "mode": "r",
                "name": "matchTables 1",
                "outputs": [
                    {
                        "format": "r.dataframe",
                        "name": "newTable",
                        "type": "table"
                    }
                ],
                "script": "rn <- rownames(staticTable)\nnewTable <- reorderedTable[rn, ]\n",
                "x": 759,
                "y": 27
            },
            "x": 759,
            "y": 27
        },
        {
            "id": "rescalePhylo 1",
            "name": "rescalePhylo 1",
            "task": {
                "inputs": [
                    {
                        "format": "r.apetree",
                        "name": "tree",
                        "type": "tree"
                    },
                    {
                        "default": "lambda",
                        "domain": [
                            "lambda",
                            "BM",
                            "OU",
                            "EB",
                            "nrate",
                            "lrate",
                            "trend",
                            "kappa",
                            "delta",
                            "white",
                            "depth"
                        ],
                        "format": "text",
                        "name": "model",
                        "type": "string"
                    },
                    {
                        "format": "number",
                        "name": "parameter",
                        "type": "number"
                    }
                ],
                "mode": "r",
                "name": "rescalePhylo 1",
                "outputs": [
                    {
                        "format": "r.apetree",
                        "name": "rscTree",
                        "type": "tree"
                    },
                    {
                        "format": "png.base64",
                        "name": "plotrstree",
                        "type": "image"
                    }
                ],
                "script": "require(geiger)\nrequire(cardoonTools)\nrscFn <- rescale(tree, model=model)\nrscTree <- rscFn(parameter)\n\nTH <- max(branching.times(rscTree))\nplotrstree <- cardoonPlot(expression(plot(rscTree, label.offset=0.05*TH)), width=1000, height=1000, res=100)\nplotrstree <- plotrstree$png",
                "x": 758,
                "y": 549
            },
            "x": 758,
            "y": 549
        },
        {
            "id": "Cophenetic Distance Matrix from Tree",
            "name": "Cophenetic Distance Matrix from Tree",
            "task": {
                "inputs": [
                    {
                        "description": "Input tree",
                        "format": "r.apetree",
                        "name": "phy",
                        "type": "tree"
                    }
                ],
                "mode": "r",
                "name": "Cophenetic Distance Matrix from Tree",
                "outputs": [
                    {
                        "description": "Output cophenetic distance matrix",
                        "format": "r.dataframe",
                        "name": "distance.matrix",
                        "type": "table"
                    }
                ],
                "script": "distance.matrix<-cophenetic(phy)",
                "x": 1069,
                "y": 431
            },
            "x": 1069,
            "y": 431
        },
        {
            "id": "Cophenetic Distance Matrix from Tree 1",
            "name": "Cophenetic Distance Matrix from Tree 1",
            "task": {
                "inputs": [
                    {
                        "description": "Input tree",
                        "format": "r.apetree",
                        "name": "phy",
                        "type": "tree"
                    }
                ],
                "mode": "r",
                "name": "Cophenetic Distance Matrix from Tree 1",
                "outputs": [
                    {
                        "description": "Output cophenetic distance matrix",
                        "format": "r.dataframe",
                        "name": "distance.matrix",
                        "type": "table"
                    }
                ],
                "script": "distance.matrix<-cophenetic(phy)",
                "x": 1037,
                "y": 533
            },
            "x": 1037,
            "y": 533
        },
        {
            "id": "Cophenetic Distance Matrix from Tree 2",
            "name": "Cophenetic Distance Matrix from Tree 2",
            "task": {
                "inputs": [
                    {
                        "description": "Input tree",
                        "format": "r.apetree",
                        "name": "phy",
                        "type": "tree"
                    }
                ],
                "mode": "r",
                "name": "Cophenetic Distance Matrix from Tree 2",
                "outputs": [
                    {
                        "description": "Output cophenetic distance matrix",
                        "format": "r.dataframe",
                        "name": "distance.matrix",
                        "type": "table"
                    }
                ],
                "script": "distance.matrix<-cophenetic(phy)",
                "x": 1013,
                "y": 635
            },
            "x": 1013,
            "y": 635
        },
        {
            "id": "matchPhyloComm 1",
            "name": "matchPhyloComm 1",
            "task": {
                "inputs": [
                    {
                        "description": "Community matrix",
                        "format": "r.dataframe",
                        "name": "table",
                        "type": "table"
                    },
                    {
                        "format": "r.apetree",
                        "name": "tree",
                        "type": "tree"
                    }
                ],
                "mode": "r",
                "name": "matchPhyloComm 1",
                "outputs": [
                    {
                        "format": "r.dataframe",
                        "name": "comTable",
                        "type": "table"
                    },
                    {
                        "format": "r.apetree",
                        "name": "comPhy",
                        "type": "tree"
                    }
                ],
                "script": "require(picante)\ncombinedPhyloComm <- match.phylo.comm(tree, table)\ncomTable <- combinedPhyloComm$comm\nrownames(comTable) <- paste(\"N\",1:nrow(comTable), sep=\"\")\n#comTable <- rownames(table)\ncomPhy <- combinedPhyloComm$phy\n\n##If you don't do this line, the row names are dropped from the output table, even though rownames are properly read in and identified for r.dataframes otherwise.\ncomTable <- cbind(rownames=rownames(table), comTable)\n",
                "x": 978,
                "y": 72
            },
            "x": 978,
            "y": 72
        },
        {
            "id": "Bray-Curtis Dissimilarity UAB 1",
            "name": "Bray-Curtis Dissimilarity UAB 1",
            "task": {
                "inputs": [
                    {
                        "description": "Community data matrix",
                        "format": "r.dataframe",
                        "name": "table",
                        "type": "table"
                    }
                ],
                "mode": "r",
                "name": "Bray-Curtis Dissimilarity UAB",
                "outputs": [
                    {
                        "description": "Bray-Curtis dissimilarity matrix",
                        "format": "r.dataframe",
                        "name": "comm.bc.dist",
                        "type": "table"
                    }
                ],
                "script": "library(picante)\n#input community data matrix with column headers and row names\n#comm<- (table, header=TRUE)#, row.names=1)\n# convert table to relative abundance\n#comm<-decostand(comm, method=\"total\")\n#convert 'comm' to a Bray-Curtis distance matrix\n#Same rownames fix\nrownames(table) <- table[,1]\ntable <- table[,-1]\n\ncomm.bc.dist<-vegdist(table, method=\"bray\")\ncomm.bc.dist <- as.matrix(comm.bc.dist)\n\n## Shouldn't have to do this, remove the column names before exporting to prevent an additional row for entering the matrix.\n#colnames(comm.bc.dist) <- paste(\"N\", colnames(comm.bc.dist), sep=\"\")"
            },
            "x": 1260,
            "y": 43
        }
    ]
}