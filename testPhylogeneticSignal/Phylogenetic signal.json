{
    "description": "Estimate phylogenetic signal for a single column in \"table.\" Specify one column and then choose either \"lambda\" = Pagel's lambda and \"K\" = Blomberg's K.",
    "inputs": [
        {
            "format": "r.dataframe",
            "name": "table",
            "type": "table"
        },
        {
            "format": "r.apetree",
            "name": "tree",
            "type": "tree"
        },
        {
            "domain": {
                "format": "column.names",
                "input": "table"
            },
            "format": "text",
            "name": "column",
            "type": "string"
        },
        {
            "default": "[object Object]",
            "domain": [
                "lambda",
                "K"
            ],
            "format": "text",
            "name": "method",
            "type": "string"
        }
    ],
    "mode": "r",
    "name": "Phylogenetic signal",
    "outputs": [
        {
            "format": "r.dataframe",
            "name": "result",
            "type": "table"
        }
    ],
    "script": "\n# measure phylogenetic signal\nrequire(aRbor)\n\n\n\ntd <- make.treedata(tree, table)\ntd <- select(td, which(colnames(td$dat)==column))\nphy <- td$phy\ndat <- td$dat\n\ncharType <- aRbor:::detectCharacterType(dat[[1]], cutoff=0.2)\n\nif(charType==\"discrete\"){\n  result <- physigArbor(td, charType=charType, signalTest=\"pagelLambda\")\n#  analysisType <- \"discrete lambda\"\n}\nif(charType==\"continuous\"){\n  if(method==\"lambda\") {\n    result <- physigArbor(td, charType=charType, signalTest=\"pagelLambda\")\n#    analysisType <- \"continuous lambda\"\n  }\n  \n  if(method==\"K\") {\n    result <- physigArbor(td, charType=charType, signalTest=\"Blomberg\")\n#    analysisType <- \"continuous K\"\n  \n  }\n}\n\nresult <- t(as.data.frame(unlist(result)))\nrownames(result) <- NULL\n"
}