{
    "description": "Fits a model to a discrete trait. Model should be one of equal rates (= \"ER\"), symmetric (= \"SYM\"), or all-rates-different (= \"ARD\"). Outputs model parameters as a Q matrix and table with likelihood, AIC/AICc, and number of parameters (k).",
    "inputs": [
        {
            "domain": [
                "\"ER\" ",
                " \"SYM\"",
                " \"ARD\""
            ],
            "format": "r.apetree",
            "name": "tree",
            "type": "tree"
        },
        {
            "format": "r.dataframe",
            "name": "table",
            "type": "table"
        },
        {
            "domain": {
                "format": "column.names",
                "input": "table"
            },
            "format": "text",
            "name": "column",
            "type": "string"
        },
        {
            "domain": [
                "ER",
                " SYM",
                " ARD",
                " meristic"
            ],
            "format": "text",
            "name": "model",
            "type": "string"
        }
    ],
    "mode": "r",
    "name": "Fit discrete",
    "outputs": [
        {
            "format": "r.dataframe",
            "name": "Q",
            "type": "table"
        },
        {
            "format": "r.dataframe",
            "name": "res",
            "type": "table"
        }
    ],
    "script": "\n## fitDiscrete script\nlibrary(aRbor)\nlibrary(geiger)\nlibrary(cardoonTools)\n\ntd <- make.treedata(tree, table)\ntd <- checkFactor(td)\nvalid.factor <- which(colnames(td$dat)==column)\nif(length(valid.factor)==0){\n  stop(\"The supplied column is not present, or is not a valid continuous trait\")\n}\ntd <- select(td, valid.factor)\n\no <- fitDiscrete(td$phy, td$dat, model=model)\n\nres = data.frame(lnL = o$opt$lnL, aic = o$opt$aic, aicc = o$opt$aicc, k = o$opt$k)\nQ <- geiger:::.Qmatrix.from.gfit(o)\nQ<-cbind(rownames(Q), Q)\n"
}