{
    "inputs": [
        {
            "format": "r.apetree",
            "name": "tree",
            "type": "tree"
        },
        {
            "format": "r.dataframe",
            "name": "table",
            "type": "table"
        },
        {
            "default": "island",
            "domain": {
                "format": "column.names",
                "input": "table"
            },
            "format": "text",
            "name": "column",
            "type": "string"
        },
        {
            "default": "discrete",
            "domain": [
                "discrete"
            ],
            "format": "text",
            "name": "type",
            "type": "string"
        }
    ],
    "mode": "r",
    "name": "aceBobDiscrete",
    "outputs": [
        {
            "format": "png.base64",
            "name": "treePlot",
            "type": "image"
        }
    ],
    "script": "library(devtools)\nlibrary(cardoonTools)\n#options(repos=\"http://cran.cnr.Berkeley.edu\")\n#install.packages(\"diversitree\", type=\"source\")\n#install_github(\"aRbor\", \"arborworkflows\")\n#require(aRbor)\n# Removed this parameter to restore automated use of the analyses from Easy Mode apps\nfont_size <- 1\nlibrary(picante)\nlibrary(geiger)\n\ntree<-as.phylo(tree)\nrow.names(table)<-table[[1]]\ncombined<-match.phylo.data(tree, table)\n\nphy<-combined$phy\ndata<-combined$data\nphy$edge.length <- phy$edge.length + 0.000001\ntrait<-data[[column]]\ntrait<-as.factor(trait)\nres<-ace(trait,phy,type=\"discrete\")\nTH <- max(branching.times(phy))\nacePlot<-function(phy, x, ...){\n    cols<-rainbow(nlevels(trait))\n    plot(phy, type=\"p\", FALSE, cex=1, label.offset=0.8, main=column)\n    tiplabels(pch=21, bg=cols[as.numeric(trait)], cex=2)\n    nodelabels(pie = res$lik.anc, piecol=cols, cex=0.5)\n    #legend(0,0,c(levels(trait)), fill = col, cex=0.7, xpd=TRUE) #legend caused cardoon error\n    #legend(\"bottomleft\", c(levels(trait)), fill=col, cex=0.7)\n}\n\n\n#td<-make.treedata(tree, table, name_column=0)\n#if(column==\"alldiscrete\"){\n#  res <- aceArbor(td, charType=type, aceType=method)\n#} else {\n#  td1 <- select(td, which(colnames(td$dat)==column))\n#  res <- aceArbor(td1, charType=type, aceType=method)\n#}\n\n#TH <- max(branching.times(td$phy))\n\n#if(type==\"discrete\"){\n#  plot.ace <- function(td, x, ...){\n#    cols <- rainbow(ncol(x))\n#    plot(td$phy, cex=font_size, label.offset=0.02*TH,...)\n#    nodelabels(pie=x, cex=0.5, piecol=cols)\n#    tiplabels(pch=21, bg=cols[as.numeric(td$dat[,column])])\n#  }\n#} \n\n#if(type==\"continuous\"){\n#  plot.ace <- function(td, x, ...){\n#    z <- c(x[[1]][,2], setNames(td$dat[,column], rownames(td$dat)))\n#    phenogram(td$phy, z, fsize=font_size, ...)\n#  }\n#} \n\ntreePlot <- cardoonPlot(expression(acePlot(phy, res)), width=1000, height=1000, res=100)\ntreePlot <- treePlot$png\n\n"
}